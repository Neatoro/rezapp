name: ci

on:
    push:
        branches:
            - '*'

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Build and export backend
              uses: docker/build-push-action@v3
              with:
                  context: src/backend
                  tags: rezapp-backend:latest
                  outputs: type=docker,dest=/tmp/backend.tar

            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: backend
                  path: /tmp/backend.tar

    api-tests:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Download artifact
              uses: actions/download-artifact@v3
              with:
                  name: backend
                  path: /tmp

            - name: Build api-tests image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  tags: api-tests:latest
                  file: pipeline/stages/api-tests/Dockerfile
                  outputs: type=docker,dest=/tmp/api-tests.tar

            - name: Prepare docker
              run: |
                  docker load --input /tmp/backend.tar
                  docker load --input /tmp/api-tests.tar
                  docker volume create --name rezapp-database
                  docker network create api-tests

            - name: Start backend container
              run: |
                  docker run -d -p 8080:8080 --network api-tests --name rezapp-backend -v ${GITHUB_WORKSPACE}/pipeline/ormconfig.json:/app/ormconfig.json -v rezapp-database:/database rezapp-backend

            - name: Wait for server to start
              uses: ifaxity/wait-on-action@v1
              with:
                  resource: http-get://localhost:8080/recipe

            - name: Run API tests
              run: |
                  docker run --rm --network api-tests --name api-tests -v rezapp-database:/database api-tests

            - if: always()
              name: Logs
              run: |
                  docker logs rezapp-backend
