name: ci

on:
    push:
        branches:
            - '*'

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Build and export backend
              uses: docker/build-push-action@v3
              with:
                  context: src/backend
                  tags: rezapp-backend:latest
                  outputs: type=docker,dest=/tmp/backend.tar

            - name: Build and export frontend
              uses: docker/build-push-action@v3
              with:
                  context: src/frontend
                  tags: rezapp-frontend:latest
                  outputs: type=docker,dest=/tmp/frontend.tar

            - name: Build and export auth provider
              uses: docker/build-push-action@v3
              with:
                  context: src/auth-provider
                  tags: rezapp-auth-provider:latest
                  outputs: type=docker,dest=/tmp/auth-provider.tar

            - name: Build and export mock proxy image
              uses: docker/build-push-action@v3
              with:
                  context: mocks/proxy
                  tags: mock-proxy:latest
                  outputs: type=docker,dest=/tmp/proxy-mock.tar

            - name: Upload backend artifact
              uses: actions/upload-artifact@v3
              with:
                  name: backend
                  path: /tmp/backend.tar

            - name: Upload frontend artifact
              uses: actions/upload-artifact@v3
              with:
                  name: frontend
                  path: /tmp/frontend.tar

            - name: Upload auth-provider artifact
              uses: actions/upload-artifact@v3
              with:
                  name: auth-provider
                  path: /tmp/auth-provider.tar

            - name: Upload mock proxy artifact
              uses: actions/upload-artifact@v3
              with:
                  name: mock-proxy
                  path: /tmp/proxy-mock.tar

    api-tests:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Download backend artifact
              uses: actions/download-artifact@v3
              with:
                  name: backend
                  path: /tmp

            - name: Download mock proxy artifact
              uses: actions/download-artifact@v3
              with:
                  name: mock-proxy
                  path: /tmp

            - name: Build api-tests image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  tags: api-tests:latest
                  file: pipeline/stages/api-tests/Dockerfile
                  outputs: type=docker,dest=/tmp/api-tests.tar

            - name: Prepare docker
              run: |
                  docker load --input /tmp/backend.tar
                  docker load --input /tmp/api-tests.tar
                  docker load --input /tmp/proxy-mock.tar

            - name: Start landscape
              run: |
                  docker-compose -f pipeline/stages/api-tests/docker-compose.yaml up -d

            - name: Wait for server to start
              uses: ifaxity/wait-on-action@v1
              with:
                  resource: http-get://localhost:8080/recipe

            - name: Run API tests
              run: |
                  docker run --rm --network rezapp --name api-tests -v rezapp-database:/database -v rezapp-images:/images api-tests

            - name: Logs landscape
              if: always()
              run: |
                  docker-compose -f pipeline/stages/api-tests/docker-compose.yaml logs

    e2e-tests:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Download backend artifact
              uses: actions/download-artifact@v3
              with:
                  name: backend
                  path: /tmp

            - name: Download frontend artifact
              uses: actions/download-artifact@v3
              with:
                  name: frontend
                  path: /tmp

            - name: Download mock proxy artifact
              uses: actions/download-artifact@v3
              with:
                  name: mock-proxy
                  path: /tmp

            - name: Build e2e image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  tags: e2e-tests:latest
                  file: pipeline/stages/e2e-tests/Dockerfile
                  outputs: type=docker,dest=/tmp/e2e-tests.tar

            - name: Prepare docker
              run: |
                  docker load --input /tmp/backend.tar
                  docker load --input /tmp/frontend.tar
                  docker load --input /tmp/proxy-mock.tar
                  docker load --input /tmp/e2e-tests.tar

            - name: Start landscape
              run: |
                  docker-compose -f pipeline/stages/e2e-tests/docker-compose.yaml up -d

            - name: Wait for server to start
              uses: ifaxity/wait-on-action@v1
              with:
                  resource: http-get://localhost:8000/api/recipe

            - name: Run E2E tests
              run: |
                  docker run --rm --network rezapp --name e2e-tests -v rezapp-database:/database -v rezapp-images:/images e2e-tests

            - name: Logs landscape
              if: always()
              run: |
                  docker-compose -f pipeline/stages/e2e-tests/docker-compose.yaml logs

    release:
        if: github.ref_name == 'main'
        runs-on: ubuntu-latest
        needs: [api-tests, e2e-tests]

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Download backend artifact
              uses: actions/download-artifact@v3
              with:
                  name: backend
                  path: /tmp

            - name: Download frontend artifact
              uses: actions/download-artifact@v3
              with:
                  name: frontend
                  path: /tmp

            - name: Download auth-provider artifact
              uses: actions/download-artifact@v3
              with:
                  name: auth-provider
                  path: /tmp

            - name: Prepare docker
              run: |
                  docker load --input /tmp/backend.tar
                  docker load --input /tmp/frontend.tar
                  docker load --input /tmp/auth-provider.tar

            - name: Log in to the Container registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - id: repo
              name: Prepare Packages Repository Name
              uses: ASzc/change-string-case-action@v5
              with:
                  string: ghcr.io/${{ github.repository }}

            - name: Tag Images
              run: |
                  docker tag rezapp-backend:latest ${{ steps.repo.outputs.lowercase }}/rezapp-backend:latest
                  docker tag rezapp-backend:latest ${{ steps.repo.outputs.lowercase }}/rezapp-backend:${{ github.sha }}

                  docker tag rezapp-frontend:latest ${{ steps.repo.outputs.lowercase }}/rezapp-frontend:latest
                  docker tag rezapp-frontend:latest ${{ steps.repo.outputs.lowercase }}/rezapp-frontend:${{ github.sha }}

                  docker tag rezapp-auth-provider:latest ${{ steps.repo.outputs.lowercase }}/rezapp-auth-provider:latest
                  docker tag rezapp-auth-provider:latest ${{ steps.repo.outputs.lowercase }}/rezapp-auth-provider:${{ github.sha }}

            - name: Push Images
              run: |
                  docker push -a ${{ steps.repo.outputs.lowercase }}/rezapp-backend
                  docker push -a ${{ steps.repo.outputs.lowercase }}/rezapp-frontend
                  docker push -a ${{ steps.repo.outputs.lowercase }}/rezapp-auth-provider

    deploy:
        runs-on: ubuntu-latest
        needs: release

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v3

            - name: Copy Files
              uses: garygrossgarten/github-action-scp@v0.8.0
              with:
                  local: pipeline/stages/deploy
                  remote: ${{ secrets.DEPLOY_PATH }}
                  host: ${{ secrets.DEPLOY_HOST }}
                  username: ${{ secrets.DEPLOY_USER }}
                  privateKey: ${{ secrets.DEPLOY_KEY }}

            - name: Start Application
              uses: appleboy/ssh-action@v0.1.6
              with:
                  host: ${{ secrets.DEPLOY_HOST }}
                  username: ${{ secrets.DEPLOY_USER }}
                  key: ${{ secrets.DEPLOY_KEY }}
                  script_stop: true
                  script: |
                      cd ${{ secrets.DEPLOY_PATH }}
                      TMPDIR=~/tmp docker-compose pull
                      TMPDIR=~/tmp docker-compose up -d
